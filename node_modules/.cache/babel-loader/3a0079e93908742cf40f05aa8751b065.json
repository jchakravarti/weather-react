{"ast":null,"code":"var _jsxFileName = \"/Users/jayanichakravarti/Documents/GitHub/weather-react/src/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport FormattedDate from \"./FormattedDate\";\nimport './Weather.css';\nimport WeatherInfo from \"./WeatherInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather(props) {\n  _s();\n\n  const [weatherData, setWeatherData] = useState({});\n  const [ready, setReady] = useState(false);\n\n  function handleResponse(response) {\n    setWeatherData({\n      city: response.data.name,\n      date: new Date(response.data.dt * 1000),\n      temperature: response.data.main.temp,\n      humidity: response.data.main.humidity,\n      wind: response.data.wind.speed,\n      description: response.data.weather[0].description\n    });\n    setReady(true);\n  }\n\n  if (ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-8\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"search\",\n              placeholder: \"Enter a city\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              className: \"btn-primary\",\n              placeholder: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(WeatherInfo, {\n        data: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this);\n  } else {\n    let apiKey = \"98ba3df7ef91e3454412bee7a0392f55\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${props.defaultCity}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return \"Loading..\";\n  }\n}\n\n_s(Weather, \"DsHTpdcoeevRaosA1ep+3PGq0Ic=\");\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/jayanichakravarti/Documents/GitHub/weather-react/src/Weather.js"],"names":["React","useState","axios","FormattedDate","WeatherInfo","Weather","props","weatherData","setWeatherData","ready","setReady","handleResponse","response","city","data","name","date","Date","dt","temperature","main","temp","humidity","wind","speed","description","weather","apiKey","apiUrl","defaultCity","get","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,eAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACvC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC;;AACA,WAASU,cAAT,CAAwBC,QAAxB,EAAkC;AAC9BJ,IAAAA,cAAc,CAAC;AACXK,MAAAA,IAAI,EAAED,QAAQ,CAACE,IAAT,CAAcC,IADT;AAEXC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASL,QAAQ,CAACE,IAAT,CAAcI,EAAd,GAAmB,IAA5B,CAFK;AAGXC,MAAAA,WAAW,EAAEP,QAAQ,CAACE,IAAT,CAAcM,IAAd,CAAmBC,IAHrB;AAIXC,MAAAA,QAAQ,EAAEV,QAAQ,CAACE,IAAT,CAAcM,IAAd,CAAmBE,QAJlB;AAKXC,MAAAA,IAAI,EAAEX,QAAQ,CAACE,IAAT,CAAcS,IAAd,CAAmBC,KALd;AAMXC,MAAAA,WAAW,EAAEb,QAAQ,CAACE,IAAT,CAAcY,OAAd,CAAsB,CAAtB,EAAyBD;AAN3B,KAAD,CAAd;AAQAf,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AAED,MAAID,KAAJ,EAAW;AACP,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACA;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,mCACA;AAAO,cAAA,IAAI,EAAC,QAAZ;AAAqB,cAAA,WAAW,EAAC,cAAjC;AAAgD,cAAA,SAAS,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBADA,eAIA;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,mCACA;AAAO,cAAA,IAAI,EAAC,QAAZ;AAAqB,cAAA,SAAS,EAAC,aAA/B;AAA6C,cAAA,WAAW,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEF;AAAnB;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH,GAjBD,MAiBO;AACP,QAAIoB,MAAM,GAAG,kCAAb;AACI,QAAIC,MAAM,GAAI,qDAAoDtB,KAAK,CAACuB,WAAY,UAASF,MAAO,eAApG;AACAzB,IAAAA,KAAK,CAAC4B,GAAN,CAAUF,MAAV,EAAkBG,IAAlB,CAAuBpB,cAAvB;AACA,WAAO,WAAP;AACH;AACA;;GAtCuBN,O;;KAAAA,O","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport FormattedDate from \"./FormattedDate\";\nimport './Weather.css';\nimport WeatherInfo from \"./WeatherInfo\";\n\nexport default function Weather(props) {\nconst [weatherData, setWeatherData] = useState({});\nconst [ready, setReady] = useState(false);\nfunction handleResponse(response) {\n    setWeatherData({\n        city: response.data.name,\n        date: new Date(response.data.dt * 1000),\n        temperature: response.data.main.temp,\n        humidity: response.data.main.humidity,\n        wind: response.data.wind.speed,\n        description: response.data.weather[0].description,\n    });\n    setReady(true);\n}\n\nif (ready) {\n    return (\n        <div className=\"weather\">     \n            <form>\n                <div className=\"row\">\n                <div className=\"col-8\">\n                <input type=\"search\" placeholder=\"Enter a city\" className=\"form-control\" />\n                </div>\n                <div className=\"col-4\">\n                <input type=\"submit\" className=\"btn-primary\" placeholder=\"Search\" />\n                </div>\n                </div>\n            </form>\n            <WeatherInfo data={weatherData}/>\n        </div>\n    )\n\n} else {\nlet apiKey = \"98ba3df7ef91e3454412bee7a0392f55\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${props.defaultCity}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return \"Loading..\";\n}    \n}"]},"metadata":{},"sourceType":"module"}