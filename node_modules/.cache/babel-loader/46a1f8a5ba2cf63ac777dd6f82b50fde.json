{"ast":null,"code":"var _jsxFileName = \"/Users/jayanichakravarti/Documents/GitHub/weather-react/src/WeatherUnit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './WeatherUnit.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherUnit(props) {\n  _s();\n\n  const [unit, setUnit] = useState(\"celsius\");\n\n  function convertToFahrenheit(event) {\n    event.preventDefault();\n    setUnit(\"fahrenheit\");\n  }\n\n  function convertToCelsius(event) {\n    event.preventDefault();\n    setUnit(\"celsius\");\n  }\n\n  if (unit === \"celsius\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherUnit\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"temperature\",\n        children: [Math.round(props.celsius), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tempUnit\",\n        children: [\"\\xB0C | \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          onClick: convertToFahrenheit,\n          children: \"\\xB0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 41\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this);\n  } else {\n    let fahrenheit = props.celsius * 9 / 5 + 32;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherUnit\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"temperature\",\n        children: [Math.round(fahrenheit), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tempUnit\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          onClick: convertToCelsius,\n          children: \"\\xB0C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 36\n        }, this), \" | \\xB0F \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_s(WeatherUnit, \"n67kjtGMfKwprJ+mcpfrwxWUTPs=\");\n\n_c = WeatherUnit;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherUnit\");","map":{"version":3,"sources":["/Users/jayanichakravarti/Documents/GitHub/weather-react/src/WeatherUnit.js"],"names":["React","useState","WeatherUnit","props","unit","setUnit","convertToFahrenheit","event","preventDefault","convertToCelsius","Math","round","celsius","fahrenheit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,mBAAP;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACvC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,SAAD,CAAhC;;AAEA,WAASK,mBAAT,CAA6BC,KAA7B,EAAoC;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,OAAO,CAAC,YAAD,CAAP;AACH;;AAED,WAASI,gBAAT,CAA0BF,KAA1B,EAAiC;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,OAAO,CAAC,SAAD,CAAP;AACH;;AACD,MAAID,IAAI,KAAK,SAAb,EAAwB;AAC5B,wBACQ;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACA;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,mBACCM,IAAI,CAACC,KAAL,CAAWR,KAAK,CAACS,OAAjB,CADD;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAGA;AAAM,QAAA,SAAS,EAAC,UAAhB;AAAA,4CAAgC;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,OAAO,EAAEN,mBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YADR;AAQK,GATD,MASO;AACH,QAAIO,UAAU,GAAIV,KAAK,CAACS,OAAN,GAAgB,CAAhB,GAAkB,CAAnB,GAAwB,EAAzC;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACA;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,mBACCF,IAAI,CAACC,KAAL,CAAWE,UAAX,CADD;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAGA;AAAM,QAAA,SAAS,EAAC,UAAhB;AAAA,gCAA2B;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,OAAO,EAAEJ,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQC;AAEJ;;GAjCuBP,W;;KAAAA,W","sourcesContent":["import React, { useState } from \"react\";\nimport './WeatherUnit.css';\n\nexport default function WeatherUnit(props) {\n    const [unit, setUnit] = useState(\"celsius\");\n\n    function convertToFahrenheit(event) {\n        event.preventDefault();\n        setUnit(\"fahrenheit\");\n    }\n\n    function convertToCelsius(event) {\n        event.preventDefault();\n        setUnit(\"celsius\");\n    }\n    if (unit === \"celsius\") {\nreturn (\n        <div className=\"WeatherUnit\">\n        <span className=\"temperature\">\n        {Math.round(props.celsius)} </span> \n        <span className=\"tempUnit\">째C | <a href=\"/\" onClick={convertToFahrenheit}>째F</a> </span>\n        \n        </div>\n    )\n    } else {\n        let fahrenheit = (props.celsius * 9/5) + 32;\n    return (\n        <div className=\"WeatherUnit\">\n        <span className=\"temperature\">\n        {Math.round(fahrenheit)} </span> \n        <span className=\"tempUnit\"><a href=\"/\" onClick={convertToCelsius}>째C</a> | 째F </span>\n        \n        </div>\n    )\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}