{"ast":null,"code":"var _jsxFileName = \"/Users/jayanichakravarti/Documents/GitHub/weather-react/src/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport './Weather.css';\nimport WeatherInfo from \"./WeatherInfo\";\nimport WeatherForecast from \"./WeatherForecast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather(props) {\n  _s();\n\n  const [weatherData, setWeatherData] = useState({});\n  const [city, setCity] = useState(props.defaultCity);\n  const [ready, setReady] = useState(false);\n\n  function handleResponse(response) {\n    setWeatherData({\n      city: response.data.name,\n      coord: response.data.coord,\n      date: new Date(response.data.dt * 1000),\n      temperature: response.data.main.temp,\n      icon: response.data.weather[0].icon,\n      humidity: response.data.main.humidity,\n      wind: response.data.wind.speed,\n      description: response.data.weather[0].description\n    });\n    setReady(true);\n  }\n\n  function search() {\n    let apiKey = \"98ba3df7ef91e3454412bee7a0392f55\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleCityChange(event) {\n    setCity(event.target.value);\n  }\n\n  if (ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-8\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"search\",\n              placeholder: \"Enter a city\",\n              className: \"form-control form\",\n              onChange: handleCityChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              className: \"btn-primary\",\n              placeholder: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(WeatherInfo, {\n        data: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(WeatherForecast, {\n        coord: weatherData.coord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this);\n  } else {\n    search();\n    return \"Loading..\";\n  }\n}\n\n_s(Weather, \"8Dpt/GNB6d9PYGj2YatozoM2qow=\");\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/jayanichakravarti/Documents/GitHub/weather-react/src/Weather.js"],"names":["React","useState","axios","WeatherInfo","WeatherForecast","Weather","props","weatherData","setWeatherData","city","setCity","defaultCity","ready","setReady","handleResponse","response","data","name","coord","date","Date","dt","temperature","main","temp","icon","weather","humidity","wind","speed","description","search","apiKey","apiUrl","get","then","handleSubmit","event","preventDefault","handleCityChange","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport './Weather.css';\nimport WeatherInfo from \"./WeatherInfo\";\nimport WeatherForecast from \"./WeatherForecast\";\n\nexport default function Weather(props) {\nconst [weatherData, setWeatherData] = useState({});\nconst [city, setCity] = useState(props.defaultCity);\nconst [ready, setReady] = useState(false);\nfunction handleResponse(response) {\n    setWeatherData({\n        city: response.data.name,\n        coord: response.data.coord,\n        date: new Date(response.data.dt * 1000),\n        temperature: response.data.main.temp,\n        icon: response.data.weather[0].icon,\n        humidity: response.data.main.humidity,\n        wind: response.data.wind.speed,\n        description: response.data.weather[0].description,\n    });\n    setReady(true);\n}\n\nfunction search() {\nlet apiKey = \"98ba3df7ef91e3454412bee7a0392f55\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n}\nfunction handleSubmit(event) {\n    event.preventDefault();\nsearch();\n}\n\nfunction handleCityChange(event) {\nsetCity(event.target.value);\n}\n\nif (ready) {\n    return (\n        <div className=\"weather\">     \n            <form onSubmit={handleSubmit}>\n                <div className=\"row\">\n                <div className=\"col-8\">\n                <input type=\"search\" placeholder=\"Enter a city\" className=\"form-control form\" onChange={handleCityChange} />\n                </div>\n                <div className=\"col-4\">\n                <input type=\"submit\" className=\"btn-primary\" placeholder=\"Search\" />\n                </div>\n                </div>\n            </form>\n            <WeatherInfo data={weatherData}/>\n            <WeatherForecast coord={weatherData.coord}/>\n        </div>\n    )\n\n} else {\nsearch();\n    return \"Loading..\";\n}    \n}"]},"metadata":{},"sourceType":"module"}