{"ast":null,"code":"var _jsxFileName = \"/Users/jayanichakravarti/Documents/GitHub/weather-react/src/WeatherForecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport './WeatherForecast.css';\nimport axios from \"axios\";\nimport WeatherForecastDay from \"./WeatherForecastDay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherForecast(props) {\n  _s();\n\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coord]);\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherForecast\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: forecast.map(function (dailyForecast, index) {\n          if (index < 6) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(WeatherForecastDay, {\n                data: dailyForecast\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 5\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 5\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this);\n  } else {\n    let apiKey = \"98ba3df7ef91e3454412bee7a0392f55\";\n    let latitude = props.coord.lat;\n    let longitude = props.coord.lon;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  return null;\n}\n\n_s(WeatherForecast, \"kLNsBjMbwg/21mEy29QJZwMPCGo=\");\n\n_c = WeatherForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"sources":["/Users/jayanichakravarti/Documents/GitHub/weather-react/src/WeatherForecast.js"],"names":["React","useState","useEffect","WeatherIcon","axios","WeatherForecastDay","WeatherForecast","props","loaded","setLoaded","forecast","setForecast","coord","handleResponse","response","data","daily","map","dailyForecast","index","apiKey","latitude","lat","longitude","lon","apiUrl","get","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,uBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC/C,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAAlC;AACA,MAAI,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,SAAS,CAAC,KAAD,CAAT;AACH,GAFQ,EAEN,CAACF,KAAK,CAACK,KAAP,CAFM,CAAT;;AAIA,WAASC,cAAT,CAAwBC,QAAxB,EAAiC;AACjCH,IAAAA,WAAW,CAACG,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAX;AACAP,IAAAA,SAAS,CAAC,IAAD,CAAT;AACC;;AAED,MAAID,MAAJ,EAAY;AACZ,wBACQ;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACKE,QAAQ,CAACO,GAAT,CAAa,UAAUC,aAAV,EAAyBC,KAAzB,EAAgC;AAC9D,cAAIA,KAAK,GAAG,CAAZ,EAAe;AACX,gCACA;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA,qCACA,QAAC,kBAAD;AAAoB,gBAAA,IAAI,EAAED;AAA1B;AAAA;AAAA;AAAA;AAAA;AADA,eAA0BC,KAA1B;AAAA;AAAA;AAAA;AAAA,oBADA;AAKH;AACgB,SARA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADR;AAgBC,GAjBD,MAiBO;AACP,QAAIC,MAAM,GAAG,kCAAb;AACA,QAAIC,QAAQ,GAAGd,KAAK,CAACK,KAAN,CAAYU,GAA3B;AACA,QAAIC,SAAS,GAAGhB,KAAK,CAACK,KAAN,CAAYY,GAA5B;AACI,QAAIC,MAAM,GAAI,uDAAsDJ,QAAS,QAAOE,SAAU,UAASH,MAAO,eAA9G;AACJhB,IAAAA,KAAK,CAACsB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBd,cAAvB;AACC;;AAED,SAAO,IAAP;AAGC;;GAzCuBP,e;;KAAAA,e","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport './WeatherForecast.css';\nimport axios from \"axios\";\nimport WeatherForecastDay from \"./WeatherForecastDay\";\n\nexport default function WeatherForecast(props) {\nlet [loaded, setLoaded] = useState(false);\nlet [forecast, setForecast] = useState(null);\n\nuseEffect(() => {\n    setLoaded(false);\n}, [props.coord]);\n\nfunction handleResponse(response){\nsetForecast(response.data.daily);\nsetLoaded(true);\n}\n\nif (loaded) {\nreturn (\n        <div className=\"WeatherForecast\">\n            <div className=\"row\">\n                {forecast.map(function (dailyForecast, index) {\nif (index < 6) {\n    return (\n    <div className=\"col\" key={index}>\n    <WeatherForecastDay data={dailyForecast} />\n</div>\n);\n}\n                })}\n\n            </div>\n        </div>\n    )\n} else {\nlet apiKey = \"98ba3df7ef91e3454412bee7a0392f55\";\nlet latitude = props.coord.lat;\nlet longitude = props.coord.lon;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`\naxios.get(apiUrl).then(handleResponse);\n}\n\nreturn null;\n\n    \n}"]},"metadata":{},"sourceType":"module"}